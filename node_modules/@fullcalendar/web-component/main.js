/*!
FullCalendar v6.0.0-beta.1
Docs & License: https://fullcalendar.io/
(c) 2022 Adam Shaw
*/
import { Calendar } from '@fullcalendar/core';
export * from '@fullcalendar/common';

class FullCalendarElement extends HTMLElement {
    constructor() {
        super(...arguments);
        this._calendar = null;
        this._options = null;
    }
    connectedCallback() {
        this._handleOptionsStr(this.getAttribute('options'));
    }
    disconnectedCallback() {
        this._handleOptionsStr(null);
    }
    attributeChangedCallback(name, oldVal, newVal) {
        if (name === 'options') {
            this._handleOptionsStr(newVal);
        }
    }
    get options() {
        return this._options;
    }
    set options(options) {
        this._handleOptions(options);
    }
    getApi() {
        return this._calendar;
    }
    _handleOptionsStr(optionsStr) {
        this._handleOptions(optionsStr ? JSON.parse(optionsStr) : null);
    }
    _handleOptions(options) {
        if (options) {
            if (this._calendar) {
                this._calendar.resetOptions(options);
            }
            else {
                this.innerHTML = '<div></div>';
                let calendarEl = this.querySelector('div');
                let calendar = new Calendar(calendarEl, options);
                calendar.render();
                this._calendar = calendar;
            }
            this._options = options;
        }
        else {
            if (this._calendar) {
                this._calendar.destroy();
                this._calendar = null;
            }
            this._options = null;
        }
    }
}

function defineFullCalendarElement(tagName = 'full-calendar') {
    customElements.define(tagName, FullCalendarElement);
}

export { FullCalendarElement, defineFullCalendarElement };
//# sourceMappingURL=main.js.map
